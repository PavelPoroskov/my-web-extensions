page loading too long, not show label
  https://fedoramagazine.org/a-web-application-firewall-for-nginx/
detect i can show label
  content-script send request to ext.service-worker when ready
    only for request from content-script
    turn off tab.onUpdate({ status: complete })
  questions
    did content-script init on every PAGE RELOAD?
    did content-script init on every PAGE URL CHANGE?
      button Back, Forward
    // DONE will this before tabs.onUpdated({ status: complete }) for long loading page?
    // service-worker send response
    //    chrome.tabs.sendMessage(tabId, {
          //   command: "bookmarkInfo",
          //   bookmarkInfoList: bookmarkInfo.bookmarkInfoList,
          // })
    // need (url --> tabId)


  // SIMPLE
  /*
  chrome.runtime.onMessage.addListener((message) => {
    if (message.command === "bookmarkInfo") {
      log('content-script: ', message.bookmarkInfoList);

      showBookmarkInfo(message.bookmarkInfoList);
    }
  });
  */

  // WITH OPTIMIZATION 1
  let hasBookmark = undefined;

  chrome.runtime.onMessage.addListener((message) => {
    if (message.command === "bookmarkInfo") {
      log('content-script: ', message.bookmarkInfoList);

      const newHasBookmark = message.bookmarkInfoList.length > 0;

      if (newHasBookmark || hasBookmark) {
        showBookmarkInfo(message.bookmarkInfoList);
      }

      hasBookmark = newHasBookmark;
    }
  });

  // WITH OPTIMIZATION 2:
  // bookmarkInfoList
  // if (!isEqual(bookmarkInfoList, message.bookmarkInfoList) {
  //    bookmarkInfoList = message.bookmarkInfoList;
  //    draw() 
  //}


firefox
  open firefox open tab with bookmark
  close firefox
  open firefox, tab with bookmark DOES NOT SHOW LABEL
  not after reload tab
  only after click second tab, click tab back

  only for current tab
    second tab has label

  how to debug
    firefox do not open with ext added with about:debugging

    use web-ext run --pre-install --keep-profile-changes --firefox-profile=Movies
      but open profile without tabs

  chrome does not have this issue

  ,
  "browser_specific_settings": {
    "gecko": {
      "id": "Bookmark-Info-2.2.4"
    }
  }

  for first tab open from side panel/bookmark

  runtime.onStartup -> updateActiveTab() -> updateTab()
    browser.tabs.sendMessage( 1 YouTube background.js:31:13
    IGNORING error: PromiseQueue Error: Could not establish connection. Receiving end does not exist.
    updateTabTask moz-extension://f086fcbd-4bf1-4e54-9913-be31e09de668/background.js:237
  tabs.onUpdated(complete) -> updateTab()
    browser.tabs.sendMessage( 1 YouTube background.js:31:13
    IGNORING error: PromiseQueue Error: Could not establish connection. Receiving end does not exist.
    updateTabTask moz-extension://f086fcbd-4bf1-4e54-9913-be31e09de668/background.js:237

if change bookmark in bookmark manager (mv to other folder) and reload page with that url
  no changes in label for folder name
    I get value from cache
      ? remove cache
  FIXED

TODO other way to display bookmark info
  I show bookmark info in page now.
  I must wait when page loading complete.
  Better way must be.

  I do not know other way

If page is protected with content-security-policy from injecting scripting
  label with bookmark will not be shown

When we open profile with opened tabs
  I have tabs.onCreate/onUpdate for every tab 
    do i need handle this events?
    My intention was handle tabs.onUpdate for new tab or user interaction with tab

  I have runtime.onStartup/windows.onFocus/tabs.onActivate calls updateActiveTab->updateTab for the same tab

  I use promise queue to handle this.
    first call of updateTab caches result
    second call of updateTab uses result from first call
DONE optimization
  events tab.onCreate? tab.onUpdate(2), tab.onActivate, windows.onFocusChanged
    results in I get bookmarkInfo three+ times

    need caching for last tab

  scenario
    open link from bookmark
    open link from page
    new tab, type url
    tab with content, enter new url

on sending to Chrome Web Store
  recommendation
    replace host permissions ("matches": [ "http://*/*", "https://*/*" ])
    to use permission activeTab 
      ?using chrome.scripting to inject on active tab

    question: Do activeTab can do without user action (press extension action)
      NO 
      an extension with the "activeTab" permission only obtains access to a tab 
      in response to an explicit user gesture.
      The following user gestures enable the "activeTab" permission:
        Executing an action
        Executing a context menu item
        Executing a keyboard shortcut from the commands API
        Accepting a suggestion from the omnibox API

  I think my current solution has better performance and UX.
    my solution does not required click from user

DONE bkm-info-sw.js:1 Uncaught (in promise) Error: Could not establish connection. Receiving end does not exist.
  may be too early chrome.tabs.sendMessage(tabId
    tab is not ready
      tabs.onUpdate(status='complete')
  after comment. no errors
     // // listen for tab switching
     // chrome.tabs.onActivated.addListener(TabsController.onActivated);
